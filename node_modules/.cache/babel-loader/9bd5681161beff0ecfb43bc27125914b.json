{"ast":null,"code":"var _jsxFileName = \"/Users/brockboutwell/Documents/Thinkful_Projects/Laura-Brock_reactError/src/components/FolderRoute.js\";\nimport React from \"react\";\nimport Nav from \"./Nav\";\nimport Header from \"./Header\";\nimport \"./FolderRoute.css\";\nimport Context from \"./Context\";\nimport { Link } from \"react-router-dom\";\nimport AddNote from \"./AddNote\";\nexport default class FolderRoute extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteButton = (e, noteId) => {\n      const baseUrl = \"http://localhost:9090\";\n      console.log(this.props);\n      e.preventDefault();\n      console.log(noteId);\n      fetch(\"\".concat(baseUrl, \"/notes/\").concat(noteId), {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(e => Promise.reject(e));\n        }\n\n        return response.json();\n      }).then(() => {\n        this.props.history.push(\"/\");\n        this.context.deleteNote(noteId);\n      }).catch(error => {\n        console.log({\n          error\n        });\n      });\n    };\n  }\n\n  render() {\n    const folder = this.props.folders.find(f => f.id === this.props.match.params.folderId);\n    const selectedNotes = this.props.notes.filter(notes => notes.folderId === folder.id).map(note => React.createElement(Link, {\n      to: \"/note/\".concat(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, note.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Date Modified: \", new Date(note.modified).toDateString()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, note.content), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.handleDeleteButton(e, note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Delete\"))));\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flexContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      folders: this.props.folders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(AddNote, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, selectedNotes)));\n  }\n\n}\nFolderRoute.contextType = Context;","map":{"version":3,"sources":["/Users/brockboutwell/Documents/Thinkful_Projects/Laura-Brock_reactError/src/components/FolderRoute.js"],"names":["React","Nav","Header","Context","Link","AddNote","FolderRoute","Component","handleDeleteButton","e","noteId","baseUrl","console","log","props","preventDefault","fetch","method","headers","then","response","ok","json","Promise","reject","history","push","context","deleteNote","catch","error","render","folder","folders","find","f","id","match","params","folderId","selectedNotes","notes","filter","map","note","name","Date","modified","toDateString","content","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from \"./Nav\";\nimport Header from \"./Header\";\nimport \"./FolderRoute.css\";\nimport Context from \"./Context\";\nimport { Link } from \"react-router-dom\";\nimport AddNote from \"./AddNote\";\n\nexport default class FolderRoute extends React.Component {\n  static contextType = Context;\n\n  handleDeleteButton = (e, noteId) => {\n    const baseUrl = \"http://localhost:9090\";\n    console.log(this.props);\n    e.preventDefault();\n    console.log(noteId);\n\n    fetch(`${baseUrl}/notes/${noteId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          return response.json().then(e => Promise.reject(e));\n        }\n        return response.json();\n      })\n      .then(() => {\n        this.props.history.push(\"/\");\n        this.context.deleteNote(noteId);\n      })\n      .catch(error => {\n        console.log({ error });\n      });\n  };\n\n  render() {\n    const folder = this.props.folders.find(\n      f => f.id === this.props.match.params.folderId\n    );\n    const selectedNotes = this.props.notes\n      .filter(notes => notes.folderId === folder.id)\n      .map(note => (\n        <Link to={`/note/${note.id}`}>\n          <li>\n            <h2>{note.name}</h2>\n            <p>Date Modified: {new Date(note.modified).toDateString()}</p>\n            <p>{note.content}</p>\n            <button\n              type=\"button\"\n              onClick={e => this.handleDeleteButton(e, note.id)}\n            >\n              Delete\n            </button>\n          </li>\n        </Link>\n      ));\n    return (\n      <main>\n        <Header />\n        <div className=\"flexContainer\">\n          <Nav folders={this.props.folders} />\n          <AddNote />\n          <ul>{selectedNotes}</ul>\n        </div>\n      </main>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}